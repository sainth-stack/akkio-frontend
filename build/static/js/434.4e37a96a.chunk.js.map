{"version":3,"file":"static/js/434.4e37a96a.chunk.js","mappings":"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","sources":["assets/svg/topFactor.svg","pages/BusinessIntelligence/components/components/Navbar.jsx","pages/BusinessIntelligence/components/components/prediction/lineGraph.jsx","pages/BusinessIntelligence/components/components/prediction/Forecast.jsx","utils/const.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTopFactor(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M6 8H1C0.45 8 0 8.45 0 9V11C0 11.55 0.45 12 1 12H6C6.55 12 7 11.55 7 11V9C7 8.45 6.55 8 6 8ZM19 2H14C13.45 2 13 2.45 13 3V5C13 5.55 13.45 6 14 6H19C19.55 6 20 5.55 20 5V3C20 2.45 19.55 2 19 2ZM19 5H14V3H19V5ZM6 14H1C0.45 14 0 14.45 0 15V17C0 17.55 0.45 18 1 18H6C6.55 18 7 17.55 7 17V15C7 14.45 6.55 14 6 14ZM6 2H1C0.45 2 0 2.45 0 3V5C0 5.55 0.45 6 1 6H6C6.55 6 7 5.55 7 5V3C7 2.45 6.55 2 6 2ZM10 0C9.45 0 9 0.45 9 1V19C9 19.55 9.45 20 10 20C10.55 20 11 19.55 11 19V1C11 0.45 10.55 0 10 0ZM19 14H14C13.45 14 13 14.45 13 15V17C13 17.55 13.45 18 14 18H19C19.55 18 20 17.55 20 17V15C20 14.45 19.55 14 19 14ZM19 17H14V15H19V17ZM19 8H14C13.45 8 13 8.45 13 9V11C13 11.55 13.45 12 14 12H19C19.55 12 20 11.55 20 11V9C20 8.45 19.55 8 19 8ZM19 11H14V9H19V11Z\",\n    fill: \"#101828\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTopFactor);\nexport default __webpack_public_path__ + \"static/media/topFactor.cfa15a6c0c0de9515562aeb152cb2889.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  const location = useLocation()\r\n  return (\r\n    // <div className=\"nav-container ms-1\">\r\n    //   <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n    //     <div className=\"container-fluid\">\r\n    //       <div>\r\n    //         <Link to={location.pathname == '/predict' ? '/prepare':\"/business-intelligence\"} style={{ textDecoration: \"none\" }}>\r\n    //           {location.pathname !== '/' ? <button type='button' className=\"navbar-brand btn btn-primary text-white\"> Go Back</button> : <img src={'/keyPulse.png'} alt='Key Pulse' width={185} height={82} />}\r\n    //         </Link>\r\n    //         <Link to={\"/prepare\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Connect</button>}\r\n    //         </Link>\r\n    //         <Link to={\"/predict\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Predict</button>}\r\n    //         </Link>\r\n    //         <Link to={\"/deployment\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Deploy</button>}\r\n    //         </Link>\r\n    //         <Link to={\"/settings/team/general\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Settings</button>}\r\n    //         </Link>\r\n\r\n    //       </div>\r\n    //     </div>\r\n    //   </nav>\r\n    // </div>\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default Navbar","import { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport const DetailedLineGraph = ({ labelsNew, data, data2,selectedField }) => {\r\n    console.log(data,data2,labelsNew)\r\n    const chartRef = useRef(null);\r\n    const myChartRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (myChartRef.current) {\r\n            myChartRef.current.destroy(); // Destroy the previous chart instance if it exists\r\n        }\r\n\r\n        const ctx = chartRef.current.getContext('2d');\r\n        myChartRef.current = new Chart(ctx, {\r\n            type: 'line', // Assuming a line chart; adjust if necessary\r\n            data: {\r\n                labels: labelsNew,\r\n                datasets: [{\r\n                    label: 'Actual',\r\n                    data: [...data],\r\n                    fill: false,\r\n                    borderColor: '#85D8DD',\r\n                    tension: 0.1,\r\n                    backgroundColor: ['#85D8DD'],\r\n                    yAxisID: 'y',\r\n                }, {\r\n                    label: 'Prediction',\r\n                    data: [...new Array(data.length > 0 ? data?.length - 1 : 0).fill(null), data[data.length > 0 ? data?.length - 1 : 0], ...data2],\r\n                    fill: false,\r\n                    borderColor: '#85D8DD',\r\n                    tension: 0.1,\r\n                    backgroundColor: ['#85D8DD'],\r\n                    yAxisID: 'y',\r\n                    borderDash: [5, 5],\r\n                    pointBackgroundColor: \"transparent\"\r\n                }],\r\n            },\r\n            options: {\r\n                chart: {\r\n                    type: 'bar',\r\n                    height: 350\r\n                },\r\n                elements: {\r\n                    point: {\r\n                        radius: 0\r\n                    }\r\n                },\r\n                responsive: true,\r\n                stacked: false,\r\n                colors: [\"#85D8DD\", \"#427ae3\", \"#3dc7d1\", '#faa93e'],\r\n                fill: {\r\n                    colors: [\"#85D8DD\", \"#427ae3\", \"#3dc7d1\", '#faa93e']\r\n                },\r\n                dataLabels: {\r\n                    enabled: false,\r\n                },\r\n                plugins: {\r\n                    legend: {\r\n                        display: true,\r\n                        labels: {\r\n                            usePointStyle: true,\r\n                        },\r\n                    },\r\n                    datalabels: {\r\n                        display: false,\r\n                    },\r\n                    tooltip: {\r\n                        mode: 'index',\r\n                        intersect: false,\r\n                    },\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        min: 0,\r\n                        position: 'left',\r\n                        title: {\r\n                            display: true,\r\n                            text: selectedField,\r\n                            color: 'black',\r\n                            fontWeight: 700,\r\n                            padding: 5\r\n                        },\r\n                        ticks: {\r\n                            // stepSize: 1000// <----- This prop sets the stepSize\r\n                        }\r\n                    },\r\n                    x: {\r\n                        barPercentage: 0.5,\r\n                        categorySpacing: 0,\r\n                        stacked: true,\r\n                        autoSkip: false,\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                        ticks: {\r\n                            autoSkip: false,\r\n                        },\r\n                    },\r\n                },\r\n                maintainAspectRatio: false,\r\n                tooltip: {\r\n                    y: {\r\n                        formatter: function (context) {\r\n                            if (typeof context === 'number') {\r\n                                return context;\r\n                            } else {\r\n                                return context[1] - context[0]\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            if (myChartRef.current) {\r\n                myChartRef.current.destroy(); // Cleanup on component unmount\r\n            }\r\n        };\r\n    }, [labelsNew, data, data2]); // Dependencies ensure the chart updates when props change\r\n\r\n    return <canvas ref={chartRef} width={\"100vh\"}/>;\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport Navbar from '../Navbar'\r\nimport { useDataAPI } from '../../contexts/GetDataApi'\r\nimport '../../styles/predictData.scss'\r\nimport topFactors from '../../../../../assets/svg/topFactor.svg'\r\nimport axios from 'axios'\r\nimport { DetailedLineGraph } from './lineGraph'\r\nimport moment from 'moment'\r\nimport { akkiourl } from '../../../../../utils/const'\r\nimport { CircularProgress } from '@mui/material'\r\nconst ForecastData = () => {\r\n\r\n    const [data, setData] = useState([])\r\n    const [headers, setLeftData] = useState([])\r\n    const [loading3, setLoading3] = useState(false); // Loading state for handleGetDataFinalData\r\n\r\n    const [filename, setFilename] = useState(\"\")\r\n    const [totData, setTotData] = useState({\r\n        accuracy: 0,\r\n        predictData: {},\r\n        lables: [],\r\n        data3: [],\r\n        data4: []\r\n    })\r\n    const name = localStorage.getItem(\"filename\").replace(/\\.[^/.]+$/, '')\r\n    // const [file, setFile] = useState(null)\r\n    const [selectedField, setSelectedField] = useState('')\r\n\r\n    const handleSelect = (item) => {\r\n        setSelectedField(item)\r\n    }\r\n\r\n    const getLeftData = async () => {\r\n        let db = (name)\r\n\r\n        const response = await axios.post(`${akkiourl}/predict/${db}`, {});\r\n        if (response.status === 200) {\r\n            setLeftData(response?.data?.columns)\r\n            setSelectedField([response?.data?.columns[0]])\r\n        }\r\n    }\r\n\r\n    const handleGetDataFinalData = async (id) => {\r\n        setLoading3(true); // Start loading\r\n        try {\r\n            const response = await axios.post(`${akkiourl}/forecast/${name}/${selectedField}`);\r\n            if (response.status === 200 && Object.keys(response?.data?.result)?.length > 0) {\r\n                const data = response?.data?.result;\r\n                const finActualData = data?.Actual;\r\n                const finPredictData = data?.prediction;\r\n                const labels = [];\r\n                const data3 = [];\r\n                const data4 = [];\r\n\r\n                const date = finActualData.date;\r\n                const length = date.length;\r\n                const lastFiveKeys = date.slice(length - 12, length);\r\n                lastFiveKeys.map((item) => {\r\n                    const dateObj = new Date(item);\r\n                    const formattedDate = moment(dateObj).format('MMM YYYY');\r\n                    labels.push(formattedDate);\r\n                });\r\n\r\n                finPredictData?.date?.map((item, index) => {\r\n                    if (index < 7) {\r\n                        const dateObj = new Date(item);\r\n                        const formattedDate = moment(dateObj).format('MMM YYYY');\r\n                        labels.push(formattedDate);\r\n                    }\r\n                });\r\n\r\n                const values2 = finActualData.values;\r\n                const length2 = values2.length;\r\n                const lastFiveKeys2 = values2.slice(length2 - 12, length2);\r\n\r\n                lastFiveKeys2.map((item) => {\r\n                    data3.push(item);\r\n                });\r\n\r\n                finPredictData?.values?.map((item, index) => {\r\n                    if (index < 7) {\r\n                        data4.push(item);\r\n                    }\r\n                });\r\n                console.log({\r\n                    predictData: finPredictData,\r\n                    labels: labels,\r\n                    data3: data3,\r\n                    data4: data4\r\n                })\r\n                setTotData({\r\n                    predictData: finPredictData,\r\n                    labels: labels,\r\n                    data3: data3,\r\n                    data4: data4\r\n                });\r\n            } else {\r\n                setTotData({\r\n                    accuracy: 0,\r\n                    predictData: {},\r\n                    lables: [],\r\n                    data3: [],\r\n                    data4: []\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        } finally {\r\n            setLoading3(false); // Stop loading\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedField) {\r\n            handleGetDataFinalData(selectedField)\r\n        }\r\n    }, [selectedField])\r\n    const {\r\n        displayContent,\r\n    } = useDataAPI()\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(displayContent)\r\n        // setHeaders(displayContent.headers)\r\n        setData(displayContent.data)\r\n        setFilename(localStorage.getItem(\"filename\"))\r\n        setTimeout(() => {\r\n        }, 2000)\r\n        getLeftData()\r\n    }, [displayContent])\r\n    const fileName = localStorage.getItem('filename')\r\n    console.log(totData)\r\n    return (\r\n        <>\r\n            {loading3 ? <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}> <CircularProgress /></div> : <>\r\n                {<div style={{ height: '85vh', overflow: 'hidden' }}>\r\n                    <Navbar />\r\n                    <div className=\"professional-table ms-2\">\r\n                        <div className=\"file-details\" style={{ borderBottom: '1px solid #e0eaf0' }}>\r\n                            <p>{filename}</p>\r\n                            <p>{data.length} rows</p>\r\n                            <p>{headers.length} columns</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <div className='predictLeftCont'>\r\n                                <h1 className='predictHeader'>Forecast</h1>\r\n                                <h2 className='predictSecondHeader'>Forecast Fields</h2>\r\n                                <p className='paragraphText'>\r\n                                    Select which numerical or categorical fields to predict and optionally ignore.\r\n                                </p>\r\n                                <div className='predictFieldsContainer'>\r\n                                    <div style={{ alignItems: 'center' }}>\r\n                                        <div className='px-2'>\r\n                                            <input data-v-27b19115=\"\" placeholder=\"Search fields...\" class=\"prediction-multiselect-searchbox\" />\r\n                                        </div>\r\n                                        <div style={{ maxHeight: 'calc(100vh - 380px)', overflow: 'auto', scrollbarWidth: 'thin', }} className='p-3 scrollHeight'>\r\n                                            {headers.map((item, index) => {\r\n                                                return (\r\n                                                    <div className='d-flex p-2' style={{ cursor: 'pointer' }} onClick={() => handleSelect(item)}>\r\n                                                        <div className={selectedField === item ? 'checkboxContainer checkboxTick' : 'checkboxContainer'}></div>\r\n                                                        <h2 className='fieldText'>{item}</h2>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-md-9 rightContainer'>\r\n                            <div className='rightttconttt'>\r\n                                {/* <div className='rightHeaderText'><img src={regression} alt='imag' /> Forecast Summary</div>\r\n                        <h2 className='rightDesctext'>Below is the forecast chart and metrics on how well the model perfomed at predicting the future outcome.</h2>\r\n                        <div className='d-flex' style={{ gap: '10px', marginRight: '50px' }}>\r\n                            <div className='regressioncard'>\r\n                                <div className='regressionCardInnerContainer'>\r\n                                    <p className='cardFirstLineText'>Accuracy is usually within</p>\r\n                                    <p className='cardLargeNumberText'> ±{(totData?.accuracy)}% </p>\r\n                                    <p className='cardFirstLineText'> Forecasted values were on average off by ±370,100.4 compared to actual values in the most recent 20% of the dataset.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n                                <div>\r\n                                    <div className='rightHeaderText'><img src={topFactors} alt='imag' /> Forecast</div>\r\n                                    <h2 className='rightDesctext'> The predictions of the model, compared to the historical data and extrapolated forward.                            </h2>\r\n                                    <div className='regressioncard' style={{ width: '96%' }}>\r\n                                        <div className='regressionCardInnerContainer' style={{ minHeight: '400px', width: '100%' }}>\r\n                                            <DetailedLineGraph {...{ labelsNew: totData.labels, data: totData.data3, data2: totData.data4, selectedField }} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForecastData;","export const akkiourl=\"http://18.142.251.129:3001/api\"\r\nexport const keypulseurl=\"http://18.143.174.1:8000/api\"\r\n\r\nexport function getFinalData(uniqueArr, isDate, length) {\r\n  // Convert values to valid Date objects or numbers\r\n  const parsedArr = uniqueArr?.map(val => {\r\n    if (isDate) {\r\n      const date = new Date(val);\r\n      return isNaN(date.getTime()) ? null : date; // Return null for invalid dates\r\n    }\r\n    return !isNaN(val) ? Number(val) : null; // Convert valid numbers\r\n  }).filter(val => val !== null); // Filter out invalid values\r\n\r\n  // Sort the array\r\n  const sortedArr = parsedArr?.sort((a, b) => a - b); // Sorting works for both dates and numbers in JavaScript\r\n\r\n  // Make chunk size dynamic based on the 'length' argument\r\n  const chunkSize = Math.floor(sortedArr?.length / length); // Base size for each chunk\r\n  const remainder = sortedArr?.length % length; // Handle remainder that cannot be evenly divided into 'length'\r\n\r\n  const finalData = [];\r\n  let index = 0;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    // Each chunk takes an extra item if there are remaining items from the division\r\n    const currentChunkSize = i < remainder ? chunkSize + 1 : chunkSize;\r\n\r\n    // Get the current chunk\r\n    const chunk = sortedArr?.slice(index, index + currentChunkSize);\r\n\r\n    if (chunk?.length > 0) {\r\n      const minValue = chunk[0]; // First value (min) in sorted chunk\r\n      const nextChunk = sortedArr?.slice(index + currentChunkSize); // Look ahead to the next chunk\r\n      const nextMinValue = nextChunk?.length > 0 ? nextChunk[0] : chunk[chunk?.length - 1]; // Avoid duplicates by always taking the next distinct value\r\n\r\n      // Format dates properly if isDate is true\r\n      const formatDate = date => {\r\n        if (isDate) {\r\n          const d = new Date(date);\r\n          return d.toLocaleDateString('en-US'); // Use 'en-US' or any preferred locale\r\n        }\r\n        return date; // For numbers, return as is\r\n      };\r\n\r\n      // Ensure there's no duplicate label by checking if the nextMinValue is greater than the current minValue\r\n      const countInRange = sortedArr?.filter(val => val >= minValue && val < nextMinValue).length;\r\n\r\n      finalData.push({\r\n        value: isDate ? `${formatDate(minValue)}` : `${minValue}`, // Use formatted date or number\r\n        count: countInRange // Count of items between minValue and nextMinValue\r\n      });\r\n    }\r\n\r\n    index += currentChunkSize; // Move the index forward\r\n  }\r\n\r\n  return finalData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  "],"names":["useLocation","_jsx","_Fragment","DetailedLineGraph","_ref","labelsNew","data","data2","selectedField","console","log","chartRef","useRef","myChartRef","useEffect","current","destroy","ctx","getContext","Chart","type","labels","datasets","label","_toConsumableArray","fill","borderColor","tension","backgroundColor","yAxisID","concat","Array","length","borderDash","pointBackgroundColor","options","chart","height","elements","point","radius","responsive","stacked","colors","dataLabels","enabled","plugins","legend","display","usePointStyle","datalabels","tooltip","mode","intersect","stroke","show","width","scales","y","min","position","title","text","color","fontWeight","padding","ticks","x","barPercentage","categorySpacing","autoSkip","grid","maintainAspectRatio","formatter","context","ref","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","headers","setLeftData","_useState5","_useState6","loading3","setLoading3","_useState7","_useState8","filename","setFilename","_useState9","accuracy","predictData","lables","data3","data4","_useState10","totData","setTotData","name","localStorage","getItem","replace","_useState11","_useState12","setSelectedField","getLeftData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","db","response","_response$data","_response$data2","wrap","_context","prev","next","axios","post","akkiourl","sent","status","columns","stop","apply","arguments","handleGetDataFinalData","_ref2","_callee2","id","_Object$keys","_response$data3","_response$data4","_finPredictData$date","_finPredictData$value","_data","finActualData","finPredictData","date","values2","length2","_context2","Object","keys","result","Actual","prediction","slice","map","item","dateObj","Date","formattedDate","moment","format","push","index","values","t0","error","finish","_x","displayContent","useDataAPI","setTimeout","children","_jsxs","style","justifyContent","alignItems","CircularProgress","overflow","Navbar","className","borderBottom","placeholder","class","maxHeight","scrollbarWidth","cursor","onClick","handleSelect","src","topFactors","alt","minHeight","getFinalData","uniqueArr","isDate","parsedArr","val","isNaN","getTime","Number","filter","sortedArr","sort","a","b","chunkSize","Math","floor","remainder","finalData","_loop","currentChunkSize","i","chunk","minValue","nextChunk","nextMinValue","countInRange","value","toLocaleDateString","count"],"sourceRoot":""}