{"version":3,"file":"static/js/107.bd0f4c60.chunk.js","mappings":"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","sources":["pages/BusinessIntelligence/components/datasets/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './styles.css'; // Import your CSS file for styling\r\nimport { MdDeleteOutline } from 'react-icons/md'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nexport const transformData = (data) => {\r\n    const transformedData = [];\r\n\r\n    // Get the keys (categories)\r\n    const keys = Object.keys(data);\r\n\r\n    // Assuming all categories have the same number of items\r\n    for (let i = 0; i < Object.values(data[keys[0]]).length; i++) {\r\n      const item = {};\r\n\r\n      // Iterate through each category\r\n      keys.forEach((key) => {\r\n        // Get the value for the current index in each category\r\n        const value = data[key][i];\r\n        \r\n        // Add the key-value pair to the item object\r\n        item[key] = value;\r\n      });\r\n\r\n      // Push the item object to the transformed data array\r\n      transformedData.push(item);\r\n    }\r\n\r\n    return transformedData;\r\n  };\r\nexport const Datasets = () => {\r\n    // Sample dataset for demonstration\r\n    const [datasets, setDatasets] = useState([\r\n        { id: 'tTaZ591iDv1c4iJj85Ip ', name: 'sampledata.csv', lastUpdate: '2024-02-25', dateCreated: '2024-01-01' },\r\n        { id: '6rVtP7IXgNiZEIakqW9G ', name: ' OKRDATA1707843206710.xlsx ', lastUpdate: '2024-02-24', dateCreated: '2024-01-15' },\r\n        { id: 'srVtP7IXgsiZEIakqW9G', name: 'Name.csv', lastUpdate: '2024-02-23', dateCreated: '2024-02-01' },\r\n        { id: '7HUHJJgNiZEIakqW9Gsn', name: 'Dataset.xsxl', lastUpdate: '2024-02-25', dateCreated: '2024-01-01' },\r\n        { id: 'ueP7IXgNiZEIakqW9Gaa', name: 'finalmodel.cscv', lastUpdate: '2024-02-24', dateCreated: '2024-01-15' },\r\n    ]);\r\n\r\n    // State for search input\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    // Handle search input change\r\n    const handleSearch = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    // Filter datasets based on search term\r\n    const filteredDatasets = datasets.filter(dataset =>\r\n        dataset.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    // Function to delete a dataset\r\n    const handleDelete = (id) => {\r\n        setDatasets(datasets.filter(dataset => dataset.id !== id));\r\n    };\r\n\r\n\r\n    \r\n    const handleGetData = async () => {\r\n        const response = await axios.post('http://3.132.248.171:7500/tableinfo',{});\r\n        if (response.status === 200) {\r\n         const data= transformData(response.data).map((item)=>{\r\n            return({\r\n                ...item,datecreated:moment(item.datecreated).format(\"YY-MMM-DD\"),lastupdate:moment(item.lastupdate).format(\"YY-MMM-DD\")\r\n            })\r\n         })\r\n         setDatasets(data)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleGetData()\r\n    },[])\r\n\r\n    return (\r\n        <div className='w-100 datasets' style={{display:'flex',justifyContent:'center'}}>\r\n            <div className=\"dataset-page mx-5\" style={{ width: '80%'}}>\r\n                <h1 style={{ fontSize: '28px',marginTop:'10px' }}>Datasets</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search datasets...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                    className='datasetinput'\r\n                />\r\n                <table className='datasetTable'>\r\n                    <thead className='datasetHeader'>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>ID</th>\r\n                            <th>Last Update</th>\r\n                            <th>Date Created</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className='datasetBody'>\r\n                        {filteredDatasets.map(dataset => (\r\n                            <tr key={dataset.id}>\r\n                                <td>{dataset.name}</td>\r\n                                <td>{dataset.id}</td>\r\n                                <td>{dataset.lastupdate}</td>\r\n                                <td>{dataset.datecreated}</td>\r\n                                <td>\r\n                                    <MdDeleteOutline color='red' size={21} />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"names":["transformData","data","transformedData","keys","Object","_loop","i","item","forEach","key","value","push","values","length","Datasets","_useState","useState","id","name","lastUpdate","dateCreated","_useState2","_slicedToArray","datasets","setDatasets","_useState3","_useState4","searchTerm","setSearchTerm","filteredDatasets","filter","dataset","toLowerCase","includes","handleGetData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","post","sent","status","map","_objectSpread","datecreated","moment","format","lastupdate","stop","apply","arguments","useEffect","_jsx","className","style","display","justifyContent","children","_jsxs","width","fontSize","marginTop","type","placeholder","onChange","e","target","MdDeleteOutline","color","size"],"sourceRoot":""}