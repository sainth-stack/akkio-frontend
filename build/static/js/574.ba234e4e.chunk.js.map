{"version":3,"file":"static/js/574.ba234e4e.chunk.js","mappings":"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","sources":["pages/BusinessIntelligence/components/components/Navbar.jsx","pages/BusinessIntelligence/components/deployments/index.js","utils/const.js"],"sourcesContent":["import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  const location = useLocation()\r\n  return (\r\n    // <div className=\"nav-container ms-1\">\r\n    //   <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n    //     <div className=\"container-fluid\">\r\n    //       <div>\r\n    //         <Link to={location.pathname == '/predict' ? '/prepare':\"/business-intelligence\"} style={{ textDecoration: \"none\" }}>\r\n    //           {location.pathname !== '/' ? <button type='button' className=\"navbar-brand btn btn-primary text-white\"> Go Back</button> : <img src={'/keyPulse.png'} alt='Key Pulse' width={185} height={82} />}\r\n    //         </Link>\r\n    //         <Link to={\"/prepare\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Connect</button>}\r\n    //         </Link>\r\n    //         <Link to={\"/predict\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Predict</button>}\r\n    //         </Link>\r\n    //         <Link to={\"/deployment\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Deploy</button>}\r\n    //         </Link>\r\n    //         <Link to={\"/settings/team/general\"} style={{ textDecoration: \"none\" }}>\r\n    //           {<button type='button' className=\"navbar-brand btn btn-primary text-white\"> Settings</button>}\r\n    //         </Link>\r\n\r\n    //       </div>\r\n    //     </div>\r\n    //   </nav>\r\n    // </div>\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React, { useEffect, useState } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { useDataAPI } from '../contexts/GetDataApi'\r\nimport '../styles/deployment.scss'\r\nimport { LuUpload } from \"react-icons/lu\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { akkiourl } from '../../../../utils/const';\r\nconst DeploymentData = () => {\r\n    const selData = [\r\n        { label: 'Yes', value: 'Yes' },\r\n        { label: 'No', value: 'No' }\r\n\r\n    ]\r\n\r\n    const name = localStorage.getItem(\"filename\").replace(/\\.[^/.]+$/, '')\r\n    let db = (name)\r\n    let db1 = (name)\r\n    let db2 = (name)\r\n\r\n    const [data, setData] = useState([])\r\n    const [headers, setHeaders] = useState([])\r\n    const [leftData, setLeftData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [filename, setFilename] = useState(\"\")\r\n    const [deployed, setDeployed] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [totData, setTotData] = useState({\r\n        title: db1,\r\n        description: db2,\r\n        finSamplerows: [],\r\n        topFields: {\r\n            Feature: [],\r\n            Importance: []\r\n        }\r\n    })\r\n    // const [file, setFile] = useState(null)\r\n    const [selectedField, setSelectedField] = useState([])\r\n\r\n    const handleSelect = (child) => {\r\n        // const isSelected = selectedField.filter((chi) => chi === item).length > 0\r\n        // if (isSelected) {\r\n        //     const data = selectedField.filter((chin) => chin !== item)\r\n        //     setSelectedField(data)\r\n        // } else {\r\n        //     setSelectedField([ item])\r\n        // }\r\n\r\n        setHeaders(displayContent.headers.filter((item, index) => item !== child))\r\n        setSelectedField([child])\r\n    }\r\n\r\n\r\n    const handleGetData = async () => {\r\n\r\n    }\r\n\r\n    const handleGetDataFinalData = async () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetData()\r\n        handleGetDataFinalData()\r\n    }, [])\r\n\r\n    const {\r\n        displayContent,\r\n    } = useDataAPI()\r\n\r\n    const getLeftData = async () => {\r\n        let db=(name) \r\n    \r\n        const response = await axios.post(`${akkiourl}/predict/${db}`, {});\r\n        if (response.status === 200) {\r\n            setLeftData(response?.data?.columns)\r\n            setSelectedField([response?.data?.columns[0]])\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getLeftData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setData(displayContent.data)\r\n        setHeaders(displayContent?.headers.filter((item, index) => index !== 0))\r\n        setFilename(localStorage.getItem(\"filename\"))\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 2000)\r\n\r\n    }, [displayContent])\r\n\r\n\r\n    const CommonName = ({ header, description, inputField, value = '' }) => {\r\n        return (\r\n            <div style={{ paddingTop: '5px' }}>\r\n                <h2 style={{ font: '500 14px/20px \"Inter\", sans-serif', color: 'hsl(240, 46.3%, 8%)' }}>{header}</h2>\r\n                <h2 style={{ font: '400 12px/16px \"Inter\", sans-serif', color: 'hsl(240, 10.3%, 38%)' }}>{description}</h2>\r\n                {inputField == 'input' && <input data-v-27b19115=\"\" placeholder=\"\" className=\"inputStyles\" value={value} />\r\n                }\r\n                {inputField === 'textarea' && <textarea data-v-27b19115=\"\" placeholder=\"\" className=\"inputStyles\" style={{ height: '80px' }} value={value} />}\r\n                {inputField === 'select' && <select id=\"connection-name\" name='tableName' className=\"inputStyles\">\r\n                    {selData.map(option => (\r\n                        <option key={option.label} style={{\r\n                            padding: '8px',\r\n                            fontSize: '16px',\r\n                            fontFamily: 'Arial, sans-serif',\r\n                            backgroundColor: '#fff',\r\n                            color: '#333'\r\n                        }} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </select>}\r\n                {inputField === 'selectHeader' && <div className='predictFieldsContainer' >\r\n                    <div style={{ alignItems: 'center' }}>\r\n                        <div style={{ overflow: 'auto', scrollbarWidth: 'thin', }} className='p-3 scrollHeight'>\r\n                            {leftData.map((item, index) => {\r\n                                return (\r\n                                    <div className='d-flex p-2' style={{ cursor: 'pointer' }} onClick={() => handleSelect(item)}>\r\n                                        <div className={selectedField.includes(item) ? 'checkboxContainer checkboxTick' : 'checkboxContainer'}></div>\r\n                                        <h2 className='fieldText'>{item}</h2>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const CommonField = ({ name }) => {\r\n        return (\r\n            <div className='fieldContainerDepl'>\r\n                <p style={{ fontSize: '12px' }}>{name}</p>\r\n                <input className='deployScreenInput' placeholder={name} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleDeploy = async () => {\r\n        const response = await axios.post(`${akkiourl}/generatedeployment/${db}/${[selectedField[0]]}`, {});\r\n        if (response.status === 200) {\r\n            setDeployed(true)\r\n            localStorage.setItem('predictItem', selectedField[0])\r\n            localStorage.setItem('url', response?.data?.deployment_url)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ minHeight: '90vh', overflow: 'hidden' }}>\r\n            <Navbar />\r\n            <div className=\"professional-table\">\r\n                <div className=\"file-details ms-2\" style={{ borderBottom: '1px solid #e0eaf0', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <div style={{ display: 'flex', gap: '20px' }}>\r\n                        <p>{filename}</p>\r\n                        <p>{data.length} rows</p>\r\n                        <p>{headers.length} columns</p>\r\n                    </div>\r\n                    {!deployed ? <button className='btn btn-primary mb-2' style={{}} onClick={() => handleDeploy()}>Deploy</button> :\r\n                        <button className='btn btn-primary mb-2' style={{}} onClick={() => navigate('/new-deployment')}>Show Deploy</button>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-md-3'>\r\n                    <div className='predictLeftCont' style={{ overflow: 'auto', scrollbarWidth: 'thin' }} >\r\n                        <CommonName {...{ header: 'Title', description: 'User-facing title for your web app.', inputField: 'input', value: totData.title }} />\r\n                        <CommonName {...{ header: 'Description', description: 'User-facing description for your web app.', inputField: 'textarea', value: totData.description }} />\r\n                        <CommonName {...{ header: 'Select Fields', description: 'Select which fields to include.', inputField: 'selectHeader' }} />\r\n                        <CommonName {...{ header: 'Make Public', description: 'Allow anyone to access this app without requiring authentication.', inputField: 'select' }} />\r\n                        <CommonName {...{ header: 'Allow Bulk Upload', description: 'Allow users to make bulk predictions by uploading datasets in CSV format.', inputField: 'select' }} />\r\n                        <CommonName {...{ header: 'Show Probability', description: 'Show probabilities of categorical predictions in addition to the prediction itself.', inputField: 'select' }} />\r\n                        <CommonName {...{ header: 'Apply Data Prep', description: 'Applies Data Prep to the data before making predictions.', inputField: 'select' }} />\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-8 rightContainer'>\r\n                    <div className='rightttContainerDeploy' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <h2 style={{ font: '500 36px \"Inter\", sans-serif', color: 'hsl(240, 46.3%, 8%)' }}>{totData.title}</h2>\r\n                        <h2 style={{ font: '400 14px \"Inter\", sans-serif', color: 'hsl(240, 10.3%, 38%)' }}>{totData.description}</h2>\r\n                        <div className='deployScreenContainer row' style={{ width: '100%', gap: '0px', margin: '0px' }}>\r\n                            {headers?.map((item) => {\r\n                                return <div className='col-6' style={{ padding: '0px', margin: '0px' }}>\r\n                                    <CommonField {...{ name: item }} />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        <button className='deployPredictButton'>Predict</button>\r\n                        <div className='exportButtonDeploy'><LuUpload />  Upload CSV, XLSX or XLS</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeploymentData","export const akkiourl=\"http://18.142.251.129:3001/api\"\r\nexport const keypulseurl=\"http://18.143.174.1:8000/api\"\r\n\r\nexport function getFinalData(uniqueArr, isDate, length) {\r\n  // Convert values to valid Date objects or numbers\r\n  const parsedArr = uniqueArr?.map(val => {\r\n    if (isDate) {\r\n      const date = new Date(val);\r\n      return isNaN(date.getTime()) ? null : date; // Return null for invalid dates\r\n    }\r\n    return !isNaN(val) ? Number(val) : null; // Convert valid numbers\r\n  }).filter(val => val !== null); // Filter out invalid values\r\n\r\n  // Sort the array\r\n  const sortedArr = parsedArr?.sort((a, b) => a - b); // Sorting works for both dates and numbers in JavaScript\r\n\r\n  // Make chunk size dynamic based on the 'length' argument\r\n  const chunkSize = Math.floor(sortedArr?.length / length); // Base size for each chunk\r\n  const remainder = sortedArr?.length % length; // Handle remainder that cannot be evenly divided into 'length'\r\n\r\n  const finalData = [];\r\n  let index = 0;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    // Each chunk takes an extra item if there are remaining items from the division\r\n    const currentChunkSize = i < remainder ? chunkSize + 1 : chunkSize;\r\n\r\n    // Get the current chunk\r\n    const chunk = sortedArr?.slice(index, index + currentChunkSize);\r\n\r\n    if (chunk?.length > 0) {\r\n      const minValue = chunk[0]; // First value (min) in sorted chunk\r\n      const nextChunk = sortedArr?.slice(index + currentChunkSize); // Look ahead to the next chunk\r\n      const nextMinValue = nextChunk?.length > 0 ? nextChunk[0] : chunk[chunk?.length - 1]; // Avoid duplicates by always taking the next distinct value\r\n\r\n      // Format dates properly if isDate is true\r\n      const formatDate = date => {\r\n        if (isDate) {\r\n          const d = new Date(date);\r\n          return d.toLocaleDateString('en-US'); // Use 'en-US' or any preferred locale\r\n        }\r\n        return date; // For numbers, return as is\r\n      };\r\n\r\n      // Ensure there's no duplicate label by checking if the nextMinValue is greater than the current minValue\r\n      const countInRange = sortedArr?.filter(val => val >= minValue && val < nextMinValue).length;\r\n\r\n      finalData.push({\r\n        value: isDate ? `${formatDate(minValue)}` : `${minValue}`, // Use formatted date or number\r\n        count: countInRange // Count of items between minValue and nextMinValue\r\n      });\r\n    }\r\n\r\n    index += currentChunkSize; // Move the index forward\r\n  }\r\n\r\n  return finalData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  "],"names":["useLocation","_jsx","_Fragment","selData","label","value","name","localStorage","getItem","replace","db","db1","db2","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","headers","setHeaders","_useState5","_useState6","leftData","setLeftData","_useState7","_useState8","setLoading","_useState9","_useState10","filename","setFilename","_useState11","_useState12","deployed","setDeployed","navigate","useNavigate","_useState13","title","description","finSamplerows","topFields","Feature","Importance","_useState14","totData","_useState15","_useState16","selectedField","setSelectedField","handleGetData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","handleGetDataFinalData","_ref2","_callee2","_context2","useEffect","displayContent","useDataAPI","getLeftData","_ref3","_callee3","response","_response$data","_response$data2","_context3","axios","post","concat","akkiourl","sent","status","columns","filter","item","index","setTimeout","CommonName","_ref4","header","inputField","_ref4$value","_jsxs","style","paddingTop","children","font","color","placeholder","className","height","id","map","option","padding","fontSize","fontFamily","backgroundColor","alignItems","overflow","scrollbarWidth","cursor","onClick","child","includes","CommonField","_ref5","handleDeploy","_ref6","_callee4","_response$data3","_context4","setItem","deployment_url","minHeight","Navbar","borderBottom","justifyContent","display","gap","length","width","margin","LuUpload","getFinalData","uniqueArr","isDate","parsedArr","val","date","Date","isNaN","getTime","Number","sortedArr","sort","a","b","chunkSize","Math","floor","remainder","finalData","_loop","currentChunkSize","i","chunk","slice","minValue","nextChunk","nextMinValue","countInRange","push","toLocaleDateString","count"],"sourceRoot":""}